# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt

snippet enum "as_enum :field, [...], prefix: true, map: :string" b!
as_enum :${1:field}, ${2:[:${3:value1}]}${4:, prefix: true, map: :string}
endsnippet

snippet defi "def initialize" i
def initialize(${1:args})
  ${2:`!p snip.rv = "\n\t\t".join(map(lambda x: snip.mkline("@" + x.strip() + " = " + x.strip()), t[1].split(","))
)`}
end
endsnippet

snippet attr "attribute :name, Value" i
attribute :${column}, ${String}
endsnippet

snippet bel "belongs_to :model, optional: true" i
belongs_to :${1:model}${2:, optional: ${3:true}}
endsnippet

snippet can "can(:manage, Class, user: @user)" i
can(${1::manage}, ${2:Class}${3:, ${4:field}: ${5:value}})
endsnippet

snippet dol "do |code|" i
do |${1:code}|
  ${2:}
end
endsnippet

snippet fb "find_by(column: value)" i
find_by(${1:column}: ${2:value})
endsnippet

snippet hasm "has_many :models, class_name: 'class'" i
has_many :${1:models}${2:, class_name: '${3:class}'}
endsnippet

snippet now "Time.zone.now" i
Time.zone.now
endsnippet

snippet numericality: "numericality: { | }" i
numericality: { $0 }
endsnippet

snippet resc "rescue StandardError => e" i
rescue ${StandardError} => ${1:e}
  ${2:}
endsnippet

snippet rescb "rescue StandardError => e ... byebug" i
rescue StandardError => e
  byebug
endsnippet

snippet rescr "rescue StandardError => e ... Rollbar.error(e)" i
rescue StandardError => e
  Rollbar.error(e, ${${1:item}: ${2:value}})
endsnippet

snippet strf "UTC Timestamp" i
strftime('%Y/%m/%d')
endsnippet

snippet strfpt "BR Timestamp" i
strftime('%d/%m/%Y')
endsnippet

snippet trans "ActiveRecord::Base.transaction(...) do" i
ActiveRecord::Base.transaction(joinable: false, requires_new: true) do
endsnippet

snippet vali "validates :field, presence: true" i
validates :${1:field}${2:, ${3:presence}: ${4:true}}
endsnippet

snippet wh "where(field: value)" i
where(${1:field}: ${2:value})
endsnippet

snippet contw "context 'when something' do .. end" i
context 'when ${1:something}' do
  ${2:}
end
endsnippet

snippet descc "description '#call' do ... end" i
describe '#call' do
  ${2:}
end
endsnippet

snippet letm "{ create(:$1${2:, $3}) }" i
let(:${1:model_name}) { create(:$1${2:, $3}) }
endsnippet

snippet let!m "{ create(:$1${2:, $3}) }" i
let!(:${1:model_name}) { create(:$1${2:, $3}) }
endsnippet

snippet params "let(:params) do { ... } end" i
let(:params) do
  {
    ${0:}
  }
end
endsnippet

snippet rspec "Rspec.describe Class, type: :model do ... end"
require 'rails_helper'

RSpec.describe ${1:Class}, type: :${2:model} do
  ${3:}
end
endsnippet

snippet deep_symbolize_keys "deep_symbolize_keys" i
deep_symbolize_keys
endsnippet

snippet deep_stringify_keys "deep_stringify_keys" i
deep_stringify_keys
endsnippet

snippet greater_than: "greater_than" A
greater_than: ${1:0}
endsnippet

snippet to_json "to_json" i
to_json
endsnippet

snippet valid? "valid?" i
valid?
endsnippet

snippet invalid? "invalid?" i
invalid?
endsnippet

snippet greater_than_or_equal_to: "greater_than_or_equal_to" A
greater_than_or_equal_to: ${1:0}
endsnippet

snippet equal_to: "equal_to" A
equal_to: ${1:100}
endsnippet

snippet less_than: "less_than" A
less_than: ${1:100}
endsnippet

snippet less_than_or_equal_to: "less_than_or_equal_to" A
less_than_or_equal_to: ${1:100}
endsnippet

snippet other_than: "other_than" A
other_than: ${1:50}
endsnippet

snippet any? "any?" i
any?
endsnippet

snippet assoc "assoc" i
assoc
endsnippet

snippet clear "clear" i
clear
endsnippet

snippet Time.zone.now "Time.zone.now" i
Time.zone.now
endsnippet

snippet Date.today "Date.today" i
Date.today
endsnippet

snippet present? "present?" i
present?
endsnippet

snippet blank? "blank?" i
blank?
endsnippet

snippet nil? "nil?" i
nil?
endsnippet

snippet compact "compact" i
compact
endsnippet

snippet compact! "compact!" i
compact!
endsnippet

snippet compare_by_identity "compare_by_identity" i
compare_by_identity
endsnippet

snippet compare_by_identity? "compare_by_identity?" i
compare_by_identity?
endsnippet

snippet deconstruct_keys "deconstruct_keys" i
deconstruct_keys
endsnippet

snippet default "default" i
default
endsnippet

snippet default_proc "default_proc" i
default_proc
endsnippet

snippet default_proc= "default_proc=" i
default_proc=
endsnippet

snippet delete "delete" i
delete
endsnippet

snippet delete_if "delete_if" i
delete_if
endsnippet

snippet dig "dig" i
dig
endsnippet

snippet each "each" i
each
endsnippet

snippet each_key "each_key" i
each_key
endsnippet

snippet each_pair "each_pair" i
each_pair
endsnippet

snippet each_value "each_value" i
each_value
endsnippet

snippet empty? "empty?" i
empty?
endsnippet

snippet eql? "eql?" i
eql?
endsnippet

snippet except "except" i
except
endsnippet

snippet fetch "fetch" i
fetch
endsnippet

snippet fetch_values "fetch_values" i
fetch_values
endsnippet

snippet filter "filter" i
filter
endsnippet

snippet filter! "filter!" i
filter!
endsnippet

snippet flatten "flatten" i
flatten
endsnippet

snippet has_key? "has_key?" i
has_key?
endsnippet

snippet has_value? "has_value?" i
has_value?
endsnippet

snippet hash "hash" i
hash
endsnippet

snippet include? "include?" i
include?
endsnippet

snippet initialize_copy "initialize_copy" i
initialize_copy
endsnippet

snippet inspect "inspect" i
inspect
endsnippet

snippet invert "invert" i
invert
endsnippet

snippet keep_if "keep_if" i
keep_if
endsnippet

snippet key "key" i
key
endsnippet

snippet key? "key?" i
key?
endsnippet

snippet keys "keys" i
keys
endsnippet

snippet length "length" i
length
endsnippet

snippet member? "member?" i
member?
endsnippet

snippet merge "merge" i
merge
endsnippet

snippet merge! "merge!" i
merge!
endsnippet

snippet rassoc "rassoc" i
rassoc
endsnippet

snippet rehash "rehash" i
rehash
endsnippet

snippet reject "reject" i
reject
endsnippet

snippet reject! "reject!" i
reject!
endsnippet

snippet replace "replace" i
replace
endsnippet

snippet select "select" i
select
endsnippet

snippet select! "select!" i
select!
endsnippet

snippet shift "shift" i
shift
endsnippet

snippet size "size" i
size
endsnippet

snippet slice "slice" i
slice
endsnippet

snippet store "store" i
store
endsnippet

snippet to_a "to_a" i
to_a
endsnippet

snippet to_h "to_h" i
to_h
endsnippet

snippet to_hash "to_hash" i
to_hash
endsnippet

snippet to_proc "to_proc" i
to_proc
endsnippet

snippet to_s "to_s" i
to_s
endsnippet

snippet transform_keys "transform_keys" i
transform_keys
endsnippet

snippet transform_keys! "transform_keys!" i
transform_keys!
endsnippet

snippet transform_values "transform_values" i
transform_values
endsnippet

snippet transform_values! "transform_values!" i
transform_values!
endsnippet

snippet update "update" i
update
endsnippet

snippet value? "value?" i
value?
endsnippet

snippet values "values" i
values
endsnippet

snippet values_at "values_at" i
values_at
endsnippet

snippet all? "all?" i
all?
endsnippet

snippet append "append" i
append
endsnippet

snippet at "at" i
at
endsnippet

snippet bsearch "bsearch" i
bsearch
endsnippet

snippet bsearch_index "bsearch_index" i
bsearch_index
endsnippet

snippet collect "collect" i
collect
endsnippet

snippet collect! "collect!" i
collect!
endsnippet

snippet combination "combination" i
combination
endsnippet

snippet concat "concat" i
concat
endsnippet

snippet count "count" i
count
endsnippet

snippet cycle "cycle" i
cycle
endsnippet

snippet deconstruct "deconstruct" i
deconstruct
endsnippet

snippet delete_at "delete_at" i
delete_at
endsnippet

snippet difference "difference" i
difference
endsnippet

snippet drop "drop" i
drop
endsnippet

snippet drop_while "drop_while" i
drop_while
endsnippet

snippet each_index "each_index" i
each_index
endsnippet

snippet fill "fill" i
fill
endsnippet

snippet find_index "find_index" i
find_index
endsnippet

snippet first "first" i
first
endsnippet

snippet flatten! "flatten!" i
flatten!
endsnippet

snippet index "index" i
index
endsnippet

snippet insert "insert" i
insert
endsnippet

snippet intersection "intersection" i
intersection
endsnippet

snippet join "join" i
join
endsnippet

snippet last "last" i
last
endsnippet

snippet map "map" i
map
endsnippet

snippet map! "map!" i
map!
endsnippet

snippet max "max" i
max
endsnippet

snippet min "min" i
min
endsnippet

snippet minmax "minmax" i
minmax
endsnippet

snippet none? "none?" i
none?
endsnippet

snippet old_to_s "old_to_s" i
old_to_s
endsnippet

snippet one? "one?" i
one?
endsnippet

snippet pack "pack" i
pack
endsnippet

snippet permutation "permutation" i
permutation
endsnippet

snippet pop "pop" i
pop
endsnippet

snippet prepend "prepend" i
prepend
endsnippet

snippet product "product" i
product
endsnippet

snippet push "push" i
push
endsnippet

snippet repeated_combination "repeated_combination" i
repeated_combination
endsnippet

snippet repeated_permutation "repeated_permutation" i
repeated_permutation
endsnippet

snippet reverse "reverse" i
reverse
endsnippet

snippet reverse! "reverse!" i
reverse!
endsnippet

snippet reverse_each "reverse_each" i
reverse_each
endsnippet

snippet rindex "rindex" i
rindex
endsnippet

snippet rotate "rotate" i
rotate
endsnippet

snippet rotate! "rotate!" i
rotate!
endsnippet

snippet sample "sample" i
sample
endsnippet

snippet shuffle "shuffle" i
shuffle
endsnippet

snippet shuffle! "shuffle!" i
shuffle!
endsnippet

snippet slice! "slice!" i
slice!
endsnippet

snippet sort "sort" i
sort
endsnippet

snippet sort! "sort!" i
sort!
endsnippet

snippet sort_by! "sort_by!" i
sort_by!
endsnippet

snippet sum "sum" i
sum
endsnippet

snippet take "take" i
take
endsnippet

snippet take_while "take_while" i
take_while
endsnippet

snippet to_ary "to_ary" i
to_ary
endsnippet

snippet transpose "transpose" i
transpose
endsnippet

snippet union "union" i
union
endsnippet

snippet uniq "uniq" i
uniq
endsnippet

snippet uniq! "uniq!" i
uniq!
endsnippet

snippet unshift "unshift" i
unshift
endsnippet

snippet zip "zip" i
zip
endsnippet

snippet ascii_only? "ascii_only?" i
ascii_only?
endsnippet

snippet bytes "bytes" i
bytes
endsnippet

snippet bytesize "bytesize" i
bytesize
endsnippet

snippet byteslice "byteslice" i
byteslice
endsnippet

snippet capitalize "capitalize" i
capitalize
endsnippet

snippet capitalize! "capitalize!" i
capitalize!
endsnippet

snippet casecmp "casecmp" i
casecmp
endsnippet

snippet casecmp? "casecmp?" i
casecmp?
endsnippet

snippet center "center" i
center
endsnippet

snippet chars "chars" i
chars
endsnippet

snippet chomp "chomp" i
chomp
endsnippet

snippet chomp! "chomp!" i
chomp!
endsnippet

snippet chop "chop" i
chop
endsnippet

snippet chop! "chop!" i
chop!
endsnippet

snippet chr "chr" i
chr
endsnippet

snippet codepoints "codepoints" i
codepoints
endsnippet

snippet crypt "crypt" i
crypt
endsnippet

snippet delete! "delete!" i
delete!
endsnippet

snippet delete_prefix "delete_prefix" i
delete_prefix
endsnippet

snippet delete_prefix! "delete_prefix!" i
delete_prefix!
endsnippet

snippet delete_suffix "delete_suffix" i
delete_suffix
endsnippet

snippet delete_suffix! "delete_suffix!" i
delete_suffix!
endsnippet

snippet downcase "downcase" i
downcase
endsnippet

snippet downcase! "downcase!" i
downcase!
endsnippet

snippet dump "dump" i
dump
endsnippet

snippet each_byte "each_byte" i
each_byte
endsnippet

snippet each_char "each_char" i
each_char
endsnippet

snippet each_codepoint "each_codepoint" i
each_codepoint
endsnippet

snippet each_grapheme_cluster "each_grapheme_cluster" i
each_grapheme_cluster
endsnippet

snippet each_line "each_line" i
each_line
endsnippet

snippet encode "encode" i
encode
endsnippet

snippet encode! "encode!" i
encode!
endsnippet

snippet encoding "encoding" i
encoding
endsnippet

snippet end_with? "end_with?" i
end_with?
endsnippet

snippet force_encoding "force_encoding" i
force_encoding
endsnippet

snippet freeze "freeze" i
freeze
endsnippet

snippet getbyte "getbyte" i
getbyte
endsnippet

snippet grapheme_clusters "grapheme_clusters" i
grapheme_clusters
endsnippet

snippet gsub "gsub" i
gsub
endsnippet

snippet gsub! "gsub!" i
gsub!
endsnippet

snippet hex "hex" i
hex
endsnippet

snippet intern "intern" i
intern
endsnippet

snippet lines "lines" i
lines
endsnippet

snippet ljust "ljust" i
ljust
endsnippet

snippet lstrip "lstrip" i
lstrip
endsnippet

snippet lstrip! "lstrip!" i
lstrip!
endsnippet

snippet match "match" i
match
endsnippet

snippet match? "match?" i
match?
endsnippet

snippet next "next" i
next
endsnippet

snippet next! "next!" i
next!
endsnippet

snippet oct "oct" i
oct
endsnippet

snippet ord "ord" i
ord
endsnippet

snippet partition "partition" i
partition
endsnippet

snippet rjust "rjust" i
rjust
endsnippet

snippet rpartition "rpartition" i
rpartition
endsnippet

snippet rstrip "rstrip" i
rstrip
endsnippet

snippet rstrip! "rstrip!" i
rstrip!
endsnippet

snippet scan "scan" i
scan
endsnippet

snippet scrub "scrub" i
scrub
endsnippet

snippet scrub! "scrub!" i
scrub!
endsnippet

snippet setbyte "setbyte" i
setbyte
endsnippet

snippet split "split" i
split
endsnippet

snippet squeeze "squeeze" i
squeeze
endsnippet

snippet squeeze! "squeeze!" i
squeeze!
endsnippet

snippet start_with? "start_with?" i
start_with?
endsnippet

snippet strip "strip" i
strip
endsnippet

snippet strip! "strip!" i
strip!
endsnippet

snippet sub "sub" i
sub
endsnippet

snippet sub! "sub!" i
sub!
endsnippet

snippet succ "succ" i
succ
endsnippet

snippet succ! "succ!" i
succ!
endsnippet

snippet swapcase "swapcase" i
swapcase
endsnippet

snippet swapcase! "swapcase!" i
swapcase!
endsnippet

snippet to_c "to_c" i
to_c
endsnippet

snippet to_f "to_f" i
to_f
endsnippet

snippet to_i "to_i" i
to_i
endsnippet

snippet to_r "to_r" i
to_r
endsnippet

snippet to_str "to_str" i
to_str
endsnippet

snippet to_sym "to_sym" i
to_sym
endsnippet

snippet tr "tr" i
tr
endsnippet

snippet tr! "tr!" i
tr!
endsnippet

snippet tr_s "tr_s" i
tr_s
endsnippet

snippet tr_s! "tr_s!" i
tr_s!
endsnippet

snippet undump "undump" i
undump
endsnippet

snippet unicode_normalize "unicode_normalize" i
unicode_normalize
endsnippet

snippet unicode_normalize! "unicode_normalize!" i
unicode_normalize!
endsnippet

snippet unicode_normalized? "unicode_normalized?" i
unicode_normalized?
endsnippet

snippet unpack "unpack" i
unpack
endsnippet

snippet unpack1 "unpack1" i
unpack1
endsnippet

snippet upcase "upcase" i
upcase
endsnippet

snippet upcase! "upcase!" i
upcase!
endsnippet

snippet upto "upto" i
upto
endsnippet

snippet valid_encoding? "valid_encoding?" i
valid_encoding?
endsnippet

snippet ajd "ajd" i
ajd
endsnippet

snippet amjd "amjd" i
amjd
endsnippet

snippet asctime "asctime" i
asctime
endsnippet

snippet ctime "ctime" i
ctime
endsnippet

snippet cwday "cwday" i
cwday
endsnippet

snippet cweek "cweek" i
cweek
endsnippet

snippet cwyear "cwyear" i
cwyear
endsnippet

snippet day "day" i
day
endsnippet

snippet day_fraction "day_fraction" i
day_fraction
endsnippet

snippet downto "downto" i
downto
endsnippet

snippet england "england" i
england
endsnippet

snippet friday? "friday?" i
friday?
endsnippet

snippet gregorian "gregorian" i
gregorian
endsnippet

snippet gregorian? "gregorian?" i
gregorian?
endsnippet

snippet httpdate "httpdate" i
httpdate
endsnippet

snippet infinite? "infinite?" i
infinite?
endsnippet

snippet inspect_raw "inspect_raw" i
inspect_raw
endsnippet

snippet iso8601 "iso8601" i
iso8601
endsnippet

snippet italy "italy" i
italy
endsnippet

snippet jd "jd" i
jd
endsnippet

snippet jisx0301 "jisx0301" i
jisx0301
endsnippet

snippet julian "julian" i
julian
endsnippet

snippet julian? "julian?" i
julian?
endsnippet

snippet ld "ld" i
ld
endsnippet

snippet leap? "leap?" i
leap?
endsnippet

snippet marshal_dump_old "marshal_dump_old" i
marshal_dump_old
endsnippet

snippet mday "mday" i
mday
endsnippet

snippet mjd "mjd" i
mjd
endsnippet

snippet mon "mon" i
mon
endsnippet

snippet monday? "monday?" i
monday?
endsnippet

snippet month "month" i
month
endsnippet

snippet new_start "new_start" i
new_start
endsnippet

snippet next_day "next_day" i
next_day
endsnippet

snippet next_month "next_month" i
next_month
endsnippet

snippet next_year "next_year" i
next_year
endsnippet

snippet nth_kday? "nth_kday?" i
nth_kday?
endsnippet

snippet prev_day "prev_day" i
prev_day
endsnippet

snippet prev_month "prev_month" i
prev_month
endsnippet

snippet prev_year "prev_year" i
prev_year
endsnippet

snippet rfc2822 "rfc2822" i
rfc2822
endsnippet

snippet rfc3339 "rfc3339" i
rfc3339
endsnippet

snippet rfc822 "rfc822" i
rfc822
endsnippet

snippet saturday? "saturday?" i
saturday?
endsnippet

snippet start "start" i
start
endsnippet

snippet step "step" i
step
endsnippet

snippet strftime "strftime" i
strftime
endsnippet

snippet strftime('%Y-%m-%d') "strftime('%Y-%m-%d')" i
strftime('%Y-%m-%d')
endsnippet

snippet strftime('%d/$m/%Y') "strftime('%d/$m/%Y')" i
strftime('%d/$m/%Y')
endsnippet

snippet sunday? "sunday?" i
sunday?
endsnippet

snippet thursday? "thursday?" i
thursday?
endsnippet

snippet to_date "to_date" i
to_date
endsnippet

snippet to_datetime "to_datetime" i
to_datetime
endsnippet

snippet to_time "to_time" i
to_time
endsnippet

snippet tuesday? "tuesday?" i
tuesday?
endsnippet

snippet wday "wday" i
wday
endsnippet

snippet wednesday? "wednesday?" i
wednesday?
endsnippet

snippet xmlschema "xmlschema" i
xmlschema
endsnippet

snippet acceptance "acceptance" i
acceptance
endsnippet

snippet validates_associated "validates_associated" i
validates_associated
endsnippet

snippet confirmation "confirmation" i
confirmation
endsnippet

snippet exclusion "exclusion" i
exclusion
endsnippet

snippet format "format" i
format
endsnippet

snippet inclusion "inclusion" i
inclusion
endsnippet

snippet perform_later "perform_later" i
perform_later
endsnippet

snippet perform_now "perform_now" i
perform_now
endsnippet

snippet set "set" i
set
endsnippet

snippet perform "perform" i
perform
endsnippet

snippet presence: "presence:" A
presence: ${1:true}
endsnippet

snippet absence "absence" i
absence
endsnippet

snippet uniqueness: "uniqueness:" A
uniqueness: ${1:true}
endsnippet

snippet allow_nil "allow_nil:" i
allow_nil: ${1:true}
endsnippet

snippet allow_blank: "allow_blank:" A
allow_blank: ${1:true}
endsnippet

snippet message: "message:" A
message: '$0'
endsnippet

snippet on: "on:" i
on: ${1::${2:method}}
endsnippet

snippet yday "yday" i
yday
endsnippet

snippet year "year" i
year
endsnippet

snippet optional: "optional:" A
optional: ${1:true}
endsnippet

snippet errorsfm "errors.full_messages.to_sentence" i
errors.full_messages.to_sentence
endsnippet

snippet before_action "before_action" i
before_action ${1::${2:method}}
endsnippet

snippet skip_before_action "skip_before_action" i
skip_before_action ${1::${2:method}}
endsnippet

snippet protect_from_forgery "protect_from_forgery" i
protect_from_forgery {$1:with: ${2::${3:method}}}
endsnippet

snippet rescue_from: "rescue_from" A
rescue_from: ${1::${2:method}}
endsnippet

snippet with: "with:" A
with: ${1::${2:method}}
endsnippet

snippet acts_like_date? "acts_like_date?" i
acts_like_date?
endsnippet

snippet advance "advance" i
advance
endsnippet

snippet ago "ago" i
ago
endsnippet

snippet at_beginning_of_day "at_beginning_of_day" i
at_beginning_of_day
endsnippet

snippet at_end_of_day "at_end_of_day" i
at_end_of_day
endsnippet

snippet at_midday "at_midday" i
at_midday
endsnippet

snippet at_middle_of_day "at_middle_of_day" i
at_middle_of_day
endsnippet

snippet at_midnight "at_midnight" i
at_midnight
endsnippet

snippet at_noon "at_noon" i
at_noon
endsnippet

snippet beginning_of_day "beginning_of_day" i
beginning_of_day
endsnippet

snippet beginning_of_week "beginning_of_week" i
beginning_of_week
endsnippet

snippet compare_with_coercion "compare_with_coercion" i
compare_with_coercion
endsnippet

snippet compare_without_coercion "compare_without_coercion" i
compare_without_coercion
endsnippet

snippet current "current" i
current
endsnippet

snippet default_inspect "default_inspect" i
default_inspect
endsnippet

snippet end_of_day "end_of_day" i
end_of_day
endsnippet

snippet find_beginning_of_week! "find_beginning_of_week!" i
find_beginning_of_week!
endsnippet

snippet midday "midday" i
midday
endsnippet

snippet middle_of_day "middle_of_day" i
middle_of_day
endsnippet

snippet midnight "midnight" i
midnight
endsnippet

snippet noon "noon" i
noon
endsnippet

snippet readable_inspect "readable_inspect" i
readable_inspect
endsnippet

snippet since "since" i
since
endsnippet

snippet to_time "to_time" i
to_time
endsnippet

snippet tomorrow "tomorrow" i
tomorrow
endsnippet

snippet yesterday "yesterday" i
yesterday
endsnippet
