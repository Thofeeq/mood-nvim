# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt

snippet rc "const Components ..." b
const ${1:`!p snip.rv = snip.basename`} = (${2:props}: ${3:Any}) => {
	return(<${4:div}>$0</$4>)
}

export default $1;
endsnippet

global !p
def camel_case(s):
	from re import sub

	s = s.replace(s[0], s[0].upper(), 1)

	return s
endglobal

snippet ust "useState" b
const [${1:val}, set`!p snip.rv = camel_case(t[1])`] = useState(${2:initialValue});
endsnippet

snippet log "console.log()" b
console.log($0)
endsnippet

